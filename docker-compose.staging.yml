version: '3.8'

services:
  voicecoop-staging:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: voicecoop-staging
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - NEXTAUTH_URL=http://localhost:3001
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-staging-secret-key-change-in-production}
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.voicecoop-staging.rule=Host(`staging.voicecoop.local`)"
      - "traefik.http.services.voicecoop-staging.loadbalancer.server.port=3000"

  redis:
    image: redis:7-alpine
    container_name: voicecoop-redis-staging
    ports:
      - "6380:6379"
    volumes:
      - redis_staging_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: voicecoop-nginx-staging
    ports:
      - "8081:80"
    volumes:
      - ./nginx.staging.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - voicecoop-staging
    restart: unless-stopped

volumes:
  redis_staging_data:
    driver: local

networks:
  default:
    name: voicecoop-staging-network
